version=1;
class GraphItems
{
	class Item0
	{
		Flags=250;
		BasicText="";
		Left=-191.79123;
		Top=-248.49394;
		Right=-101.79124;
		Bottom=-198.494;
		BgColor=255;
		class ItemInfo
		{
			Text="INIT";
			lStyle=-842150451;
			Shape=6;
			FontFace="";
			FontHeight=10;
			FontWeight=700;
			FontUnderline=1;
			FontCharSet=0;
			ItemType=0;
			class ItemInfo
			{
				Id=0;
				InitCode="_busy = false;" \n "_exitFSM = false;" \n "_TAC_confirmed = false;" \n "" \n "_TACOM_status = ""PreInit"";" \n "_timestamp = time;" \n "" \n "_OPCOM_HANDLER = _this select 0;" \n "_OPCOM_FSM =  [_OPCOM_HANDLER,""OPCOM_FSM""] call ALiVE_fnc_HashGet;" \n "_TACOM_FSM =  [_OPCOM_HANDLER,""TACOM_FSM""] call ALiVE_fnc_HashGet;" \n "_TACOM_QUEUE = [];" \n "" \n "_debug = [_OPCOM_HANDLER,""debug"",false] call ALiVE_fnc_HashGet;" \n "_side = [_OPCOM_HANDLER,""side"",""EAST""] call ALiVE_fnc_HashGet;" \n "_factions = [_OPCOM_HANDLER,""factions"",[""OPF_F""]] call ALiVE_fnc_HashGet;" \n "_sidesEnemy = [_OPCOM_HANDLER,""sidesenemy"",""WEST""] call ALiVE_fnc_HashGet;" \n "" \n "_lastanalyze = 0;" \n "_lastEnemyScan = 0;" \n "_cycleTime = 120;" \n "_pause = false;" \n "" \n "_sectionsamount_attack = [_OPCOM_HANDLER,""sectionsamount_attack"",4] call ALiVE_fnc_HashGet;" \n "_sectionsamount_reserve = [_OPCOM_HANDLER,""sectionsamount_reserve"",1] call ALiVE_fnc_HashGet;" \n "_sectionsamount_defend = [_OPCOM_HANDLER,""sectionsamount_defend"",2] call ALiVE_fnc_HashGet;" \n "" \n "_colorside = ""ColorRed"";" \n "switch (_side) do {" \n "    case (""WEST"") : {_colorside = ""ColorBlue""};" \n "    case (""EAST"") : {_colorside = ""ColorRed""};" \n "    case (""GUER"") : {_colorside = ""ColorGreen""};" \n "    default {_colorside = ""ColorRed""};" \n "};" \n "" \n "// Get all controlled profiles" \n "_inf = [_OPCOM_HANDLER,""infantry"",[]] call ALiVE_fnc_HashGet;" \n "_mot = [_OPCOM_HANDLER,""motorized"",[]] call ALiVE_fnc_HashGet;" \n "_mech = [_OPCOM_HANDLER,""mechanized"",[]] call ALiVE_fnc_HashGet;" \n "_armored = [_OPCOM_HANDLER,""armored"",[]] call ALiVE_fnc_HashGet;" \n "_artillery = [_OPCOM_HANDLER,""artillery"",[]] call ALiVE_fnc_HashGet;" \n "_AAA = [_OPCOM_HANDLER,""AAA"",[]] call ALiVE_fnc_HashGet;" \n "_air = [_OPCOM_HANDLER,""air"",[]] call ALiVE_fnc_HashGet;" \n "_sea = [_OPCOM_HANDLER,""sea"",[]] call ALiVE_fnc_HashGet;" \n "_profiles = _inf + _mot + _mech + _armored + _artillery + _AAA + _air + _sea;" \n "" \n "" \n "//Reset ambient movement on all owned vehicles profiles without waypoints" \n "{" \n "    _profile = [ALiVE_ProfileHandler,""getProfile"",_x] call ALiVE_fnc_ProfileHandler;" \n "" \n "	if !(isNil ""_profile"") then {" \n "" \n "    		_vehiclesInCommandOf = [_profile,""vehiclesInCommandOf"",[]] call ALiVE_fnc_HashGet;" \n "		_activeCommands = [_profile, ""activeCommands"", []] call ALIVE_fnc_HashGet;" \n "" \n "    		if (count _vehiclesInCommandOf > 0 && {count _activeCommands == 0}) then {" \n "        		[_profile, ""setActiveCommand"", [""ALIVE_fnc_ambientMovement"",""spawn"",[1000,""SAFE"",[0,0,0]]]] call ALIVE_fnc_profileEntity;" \n "    		};" \n "	} else {" \n "		[""TACOM: NULL profile passed to FSM: %1"", _x] call ALiVE_fnc_dump;" \n "	};" \n "} foreach _profiles;" \n "" \n "" \n "// debug ---------------------------------------" \n "if(_debug) then {" \n "    [""MIL OPCOM - Counting %1 profiles for faction %2"",count _profiles,_factions] call ALIVE_fnc_dumpR;" \n "};" \n "// debug ---------------------------------------";
			};
		};
	};
	class Item1
	{
		Flags=218;
		BasicText="";
		Left=-194.5571;
		Top=-181.06712;
		Right=-104.55711;
		Bottom=-131.06712;
		BgColor=65535;
		class ItemInfo
		{
			Text="INIT" \n "COMPLETE";
			lStyle=-842150451;
			Shape=2;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=1;
				Condition="_OPCOM_FSM =  [_OPCOM_HANDLER,""OPCOM_FSM""] call ALiVE_fnc_HashGet;" \n "_TACOM_FSM =  [_OPCOM_HANDLER,""TACOM_FSM""] call ALiVE_fnc_HashGet;" \n "" \n "!(isnil ""_OPCOM_FSM"") && !(isnil ""_TACOM_FSM"") && {_OPCOM_FSM > 0 && _TACOM_FSM > 0};";
			};
		};
	};
	class Item2
	{
		Flags=250;
		BasicText="";
		Left=-398.91531;
		Top=190.63586;
		Right=98.822098;
		Bottom=238.50044;
		BgColor=16777215;
		class ItemInfo
		{
			Text="ANALYZE";
			lStyle=-842150451;
			FontFace="Arial";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=2;
			class ItemInfo
			{
				Id=2;
				InitCode="private [""_pos"",""_objective"",""_size"",""_operation"",""_data_operation"",""_data_value"",""_tacom_data"",""_recon"",""_capture"",""_defend"",""_reserve"",""_custom"",""_dataset"",""_transmit"",""_TACOM_ACTION"",""_timeout"",""_section"",""_sectionSupport"",""_event"",""_eventID""];" \n "" \n "_busy = true;" \n "_TACOM_status = ""Analysis"";" \n "_timestamp = time;" \n "" \n "_recon = nil;" \n "_capture = nil;" \n "_defend = nil;" \n "_reserve = nil;" \n "_custom = nil;" \n "" \n "_section = [];" \n "_sections = [];" \n "" \n "if (count _TACOM_QUEUE > 0) then {" \n "    _TACOM_ACTION = _TACOM_QUEUE select 0;" \n "    _TACOM_QUEUE set [0,""x""];" \n "    _TACOM_QUEUE = _TACOM_QUEUE - [""x""];" \n "};" \n "" \n "_timeout = ((isnil ""_TACOM_ACTION"") && {(time - _lastAnalyze) >= 15});" \n "if (_timeout) then {_TACOM_ACTION = [""analyze_internal"",nil]};" \n "" \n "//start operating if data received" \n "if !(isnil ""_TACOM_ACTION"") then {" \n "    _DATA_OPERATION = _TACOM_ACTION select 0;" \n "    _DATA_VALUE = _TACOM_ACTION select 1;" \n "    _TACOM_ACTION = nil;" \n "    " \n "    //_check = ""nada"";" \n "    //if !(isnil ""_DATA_VALUE"") then {_check = _DATA_VALUE};" \n "    //[""TAC op: %1 Val %2"",_DATA_OPERATION,_check] call ALiVE_fnc_DumpR;" \n "" \n "    //select data operation" \n "    switch (_DATA_OPERATION) do {" \n "" \n "	    case (""analyze_internal"") : {" \n "		    // Scan for enemies when inactive more than 60 seconds" \n "		    //[""Analyze internal | %1 | %2"",time,_lastEnemyScan] call ALiVE_fnc_DumpR;" \n "" \n "            if (time - _lastEnemyScan > 60) then {" \n "                [_OPCOM_HANDLER,""scanallenemies""] spawn ALIVE_fnc_OPCOM;" \n "" \n "                _targets = [_OPCOM_HANDLER,""knownentities"",[]] call ALiVE_fnc_HashGet;" \n "" \n "                if (_debug) then {" \n "                    [""TACOM %2 found enemies when scanning for enemies: %1"",_targets,_side] call ALiVE_fnc_DumpR;" \n "                };" \n "        " \n "                //Attack reported enemy directly" \n "                if (count _targets > 0) then {" \n "        " \n "                    _targetID = _targets select 0 select 0;" \n "" \n "                    if (isnil ""_targetID"") exitwith {};" \n "" \n "                    _target = [ALIVE_profileHandler, ""getProfile"",_targetID] call ALIVE_fnc_profileHandler;" \n "" \n "                    if (isnil ""_target"") exitwith {};" \n "" \n "                    _vehicle = ([_target,""vehicleAssignments"",[[],[]]] call ALIVE_fnc_hashGet) select 1;" \n "" \n "                    if (count _vehicle > 0) then {" \n "" \n "                        // Attack with 1 air vehicle if target is in a vehicle" \n "                        if (_debug) then {[""TACOM %2 sends QRF request to OPCOM (%1)"",_targetID,_side] call ALiVE_fnc_DumpR};" \n "" \n "                        _OPCOM_FSM setFSMVariable [""_OPCOM_DATA"",[""QRF"",[_targetID]]];" \n "                    } else {" \n "                            // Send 2 infantry groups if target is not in a vehicle" \n "                            if (_debug) then {[""TACOM %2 sends QRF of type infantry on %1"",_targetID,_side] call ALiVE_fnc_DumpR};" \n "" \n "                        _attackers = [_OPCOM_HANDLER, ""attackentity"",[_targetID,2,""infantry""]] call ALIVE_fnc_OPCOM;" \n "                    };" \n "                };" \n "                        " \n "                _lastEnemyScan = time;" \n "            };" \n "	    };" \n "        " \n "        //Analyze sent data" \n "		case (""analyze"") : {" \n "" \n "			private [""_targets"",""_targetID"",""_target"",""_vehicle""];" \n "	" \n "	        _objective = _DATA_VALUE;" \n "	        _pos = [_objective,""center""] call AliVE_fnc_HashGet;" \n "	        _opcom_orders = [_objective,""opcom_orders""] call AliVE_fnc_HashGet;" \n "	        _state = [_objective,""opcom_state""] call AliVE_fnc_HashGet;" \n "	        _playertasks = [_OPCOM_HANDLER,""playertasks"",[]] call ALiVE_fnc_HashGet;" \n "			" \n "" \n "            //select internal TACOM orders by global OPCOM order and set appropriate conditions for execution" \n "            switch (_opcom_orders) do {" \n "" \n "                case (""attack"") : {" \n "                    _danger = [_objective,""danger"",-1] call AliVE_fnc_HashGet;" \n "                    _size = _sectionsamount_attack;" \n "" \n "                    switch (_danger < 0) do {" \n "                        case (true) : {_recon = [_objective,_size]};" \n "                        case (false) : {_capture = [_objective,_size]};" \n "                    };" \n "" \n "			if (_danger > 0) then {" \n "				// Request OPCOM check objective for airfield and send OCA if necessary" \n "				_OPCOM_FSM setFSMVariable [""_OPCOM_DATA"",[""OCA"",[_objectiveID]]];" \n "			};" \n "                };" \n "" \n "                case (""defend"") : {" \n "                    //Define defense conditions" \n "                    //Detect near enemies" \n "                    _nearEnemies = [_objective,""findProfilesNearPosition"",[_pos,_sidesEnemy,false]] call AliVE_fnc_OPCOM;" \n "                    " \n "                    //Defend until no enemies are near" \n "                    if (count _nearEnemies > 0) then {" \n "" \n "                        //Request CAS on ""defend"" order" \n "                        if !(_state == ""defending"") then {" \n "                            _attackers = [_OPCOM_HANDLER, ""attackentity"",[_nearEnemies select 0 select 0,1,""air""]] call ALIVE_fnc_OPCOM;" \n "                        };" \n "" \n "                        _size = _sectionsamount_defend;" \n "                        _defend = [_objective,_size];" \n "                    } else {" \n "                        _size = _sectionsamount_reserve;" \n "                        _reserve = [_objective,_size];" \n "                    };" \n "                };" \n "        " \n "                case (""reserve"") : {" \n "                    _size = _sectionsamount_reserve;" \n "" \n "                    _reserve = [_objective,_size];" \n "                };" \n "" \n "                case (""custom"") : {};" \n "                default {};" \n "            };" \n "        };" \n "" \n "        //handle internal order completion by TACOM order state" \n "        case (""completed"") : {" \n "            private [""_ProfileID"",""_profile""];" \n "" \n "            _ProfileID = _DATA_VALUE select 0;" \n "            _objectiveID = _DATA_VALUE select 1;" \n "            _orders = _DATA_VALUE select 2;" \n "" \n "            _objective = [_OPCOM_HANDLER,""getobjectivebyid"",_objectiveID] call ALiVE_fnc_OPCOM;" \n "            _profile = [ALiVE_ProfileHandler,""getProfile"",_profileID] call ALiVE_fnc_ProfileHandler;" \n "" \n "            if (isnil ""_profile"") exitwith {_TACOM_DATA = [""analyze"",_objective]; _busy = false};" \n "" \n "            _posP = [_profile,""position""] call ALiVE_fnc_HashGet;" \n "            _section = [_objective,""section""] call AliVE_fnc_HashGet;" \n "            _state = [_objective,""tacom_state""] call AliVE_fnc_HashGet;" \n "            _transmit = !([_objective,""opcom_state""] call AliVE_fnc_HashGet == ""internal"");" \n "            _dataset = nil;" \n "" \n "            switch (_state) do {" \n "                case (""recon"") : {" \n "                    if !([_OPCOM_HANDLER,""synchronizeorders"",_ProfileID] call ALiVE_fnc_OPCOM) exitwith {" \n "                        // debug ---------------------------------------" \n "                        if(_debug) then { [""TACOM %1 regrouping! Waiting for %2 groups!"",_ProfileID,({_objectiveID == (_x select 2)} count ([_OPCOM_HANDLER,""pendingorders"",[]] call ALiVE_fnc_HashGet))] call ALIVE_fnc_dumpR; };" \n "                        // debug ---------------------------------------" \n "                    };" \n "				//All groups are in position" \n "                        //Scan for visible enemies (done only once on recon for performance sake - regulary scan every 2 minutes done by OPCOM)" \n "                        _danger = count ([_OPCOM_HANDLER,""scanForNearEnemies"", [_posP, true]] call ALiVE_fnc_OPCOM);" \n "" \n "                        // TBD: Calculate danger level depending on recon outcome (sector analysis)" \n "                        [_objective,""danger"",_danger] call AliVE_fnc_HashSet;" \n "" \n "								if (_danger > 0) then {" \n "									if (_debug) then {[""TACOM %2 spotted %3 enemies at %1!"",_objectiveID,_side,_danger] call ALiVE_fnc_DumpR};" \n "" \n "									_OPCOM_FSM setFSMVariable [""_OPCOM_DATA"",[""QRF"",[_objectiveID]]];" \n "								} else {" \n "									if (_debug) then {[""TACOM %2 didn't spot any enemies at %1!"",_objectiveID,_side] call ALiVE_fnc_DumpR};" \n "								};" \n "" \n "                        //analyse as recon is completed" \n "                        _dataset = {_TACOM_DATA = [""analyze"",_objective]};" \n "" \n "                        // log event --------------------------------------------------------------------------------------------" \n "                        // ADDED ARJay ---------------------------------------------------------------------------------------" \n "                        _event = ['OPCOM_RECON', [_side,_objective],""OPCOM""] call ALIVE_fnc_event;" \n "                        _eventID = [ALIVE_eventLog, ""addEvent"",_event] call ALIVE_fnc_eventLog;" \n "                };" \n "                case (""capture"") : {" \n "                    if !([_OPCOM_HANDLER,""synchronizeorders"",_ProfileID] call ALiVE_fnc_OPCOM) exitwith {" \n "                        // debug ---------------------------------------" \n "                        if(_debug) then { [""TACOM %1 regrouping! Waiting for %2 groups!"",_ProfileID,({_objectiveID == (_x select 2)} count ([_OPCOM_HANDLER,""pendingorders"",[]] call ALiVE_fnc_HashGet))] call ALIVE_fnc_dumpR; };" \n "                        // debug ---------------------------------------" \n "                    };" \n "                    " \n "                        //set objective state and re-analyse after objective state change" \n "                        [_objective,""opcom_state"",""reserve""] call AliVE_fnc_HashSet;" \n "                        [_objective,""opcom_orders"",""reserve""] call AliVE_fnc_HashSet;" \n "                        _dataset = {_TACOM_DATA = [""analyze"",_objective]};" \n "                        " \n "                        // log event --------------------------------------------------------------------------------------------" \n "                        // ADDED ARJay ---------------------------------------------------------------------------------------" \n "                                _event = ['OPCOM_CAPTURE', [_side,_objective],""OPCOM""] call ALIVE_fnc_event;" \n "                                   _eventID = [ALIVE_eventLog, ""addEvent"",_event] call ALIVE_fnc_eventLog;" \n "                    " \n "                };" \n "                case (""defend"") : {" \n "                    if !([_OPCOM_HANDLER,""synchronizeorders"",_ProfileID] call ALiVE_fnc_OPCOM) exitwith {" \n "                        if (_debug) then {" \n "									[""TACOM %1 regrouping! Waiting for %2 groups!"",_ProfileID,({_objectiveID == (_x select 2)} count ([_OPCOM_HANDLER,""pendingorders"",[]] call ALiVE_fnc_HashGet))] call ALIVE_fnc_dumpR;" \n "								};" \n "                    };" \n "                " \n "                        //analyse" \n "                        _dataset = {_TACOM_DATA = [""analyze"",_objective]};" \n "" \n "                    // log event --------------------------------------------------------------------------------------------" \n "                    // ADDED ARJay ---------------------------------------------------------------------------------------" \n "                            _event = ['OPCOM_DEFEND', [_side,_objective],""OPCOM""] call ALIVE_fnc_event;" \n "                               _eventID = [ALIVE_eventLog, ""addEvent"",_event] call ALIVE_fnc_eventLog;" \n "                };" \n "                case (""reserve"") : {" \n "                    _ProfilesReserve = [_OPCOM_HANDLER,""ProfileIDsReserve"",[]] call ALiVE_fnc_HashGet;" \n "                    if !(_ProfileID in _ProfilesReserve) then {" \n "                        [_OPCOM_HANDLER,""ProfileIDsReserve"",_ProfilesReserve + [_ProfileID]] call ALiVE_fnc_HashSet;" \n "                    };" \n "" \n "                    if !([_OPCOM_HANDLER,""synchronizeorders"",_ProfileID] call ALiVE_fnc_OPCOM) exitwith {" \n "                        // debug ---------------------------------------" \n "                        if(_debug) then { [""TACOM %1 regrouping! Waiting for %2 groups!"",_ProfileID,({_objectiveID == (_x select 2)} count ([_OPCOM_HANDLER,""pendingorders"",[]] call ALiVE_fnc_HashGet))] call ALIVE_fnc_dumpR; };" \n "                        // debug ---------------------------------------" \n "                    };" \n "" \n "							//Reset objectives danger after reserving it" \n "							[_objective,""danger"",-1] call AliVE_fnc_HashSet;" \n "" \n "			  				//Clear all waypoints" \n "			  				[_profile, ""clearWaypoints""] call ALIVE_fnc_profileEntity;" \n "" \n "                    //Command to garrison" \n "                    [_profile, ""clearActiveCommands""] call ALIVE_fnc_profileEntity;" \n "                    [_profile, ""setActiveCommand"", [""ALIVE_fnc_garrison"",""spawn"",[200,""true"",[0,0,0]]]] call ALIVE_fnc_profileEntity;" \n "" \n "                    //transmit to OPCOM as objective was completed" \n "                    [_objective,""opcom_state"",""idle""] call AliVE_fnc_HashSet;" \n "                    [_objective,""opcom_orders"",""none""] call AliVE_fnc_HashSet;" \n "                    if (_debug) then {([_objective,""objectiveID""] call AliVE_fnc_HashGet) setMarkerColorLocal _colorside};" \n "" \n "                    // log event --------------------------------------------------------------------------------------------" \n "                    // ADDED ARJay ---------------------------------------------------------------------------------------" \n "                            _event = ['OPCOM_RESERVE', [_side,_objective],""OPCOM""] call ALIVE_fnc_event;" \n "                               _eventID = [ALIVE_eventLog, ""addEvent"",_event] call ALIVE_fnc_eventLog;" \n "                };" \n "                default {_dataset = {}};" \n "            };" \n "            if !(isnil ""_dataset"") then {if (_transmit) then {call _dataset}};" \n "        };" \n "        default {};" \n "    };" \n "    _busy = false;" \n "} else {" \n "    _busy = false;" \n "};" \n "" \n "_lastanalyze = time;";
			};
		};
	};
	class Item3
	{
		Flags=218;
		BasicText="";
		Left=-194.50854;
		Top=-19.777693;
		Right=-104.50854;
		Bottom=30.222303;
		BgColor=65535;
		class ItemInfo
		{
			Text="RECEIVE";
			lStyle=-842150451;
			Shape=2;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=3;
				Condition="_TACOM_status = ""waiting for data"";" \n "!(isnil ""_TACOM_DATA"") && {!_pause};";
			};
		};
	};
	class Item4
	{
		Flags=218;
		BasicText="";
		Left=-296.38376;
		Top=269.20084;
		Right=-206.38359;
		Bottom=319.20078;
		BgColor=65535;
		class ItemInfo
		{
			Text="CAPTURE" \n "Conditions";
			lStyle=-842150451;
			Shape=2;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=4;
				Priority=3;
				Condition="!(isnil ""_capture"");";
			};
		};
	};
	class Item5
	{
		Flags=210;
		BasicText="";
		Left=176.0041;
		Top=761.43494;
		Right=184.0041;
		Bottom=769.43481;
		BgColor=0;
		class ItemInfo
		{
			Text="";
			lStyle=-842150451;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=7;
			class ItemInfo
			{
				Id=5;
			};
		};
	};
	class Item6
	{
		Flags=210;
		BasicText="";
		Left=174.60449;
		Top=1.165148;
		Right=182.60455;
		Bottom=9.1651554;
		BgColor=0;
		class ItemInfo
		{
			Text="";
			lStyle=-842150451;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=7;
			class ItemInfo
			{
				Id=6;
			};
		};
	};
	class Item7
	{
		Flags=218;
		BasicText="";
		Left=-197.9097;
		Top=270.27707;
		Right=-107.90979;
		Bottom=320.27707;
		BgColor=65535;
		class ItemInfo
		{
			Text="DEFEND" \n "conditions";
			lStyle=-842150451;
			Shape=2;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=7;
				Priority=2;
				Condition="!(isnil ""_defend"");";
			};
		};
	};
	class Item8
	{
		Flags=218;
		BasicText="";
		Left=-98.86097;
		Top=268.98392;
		Right=-8.8609467;
		Bottom=318.98392;
		BgColor=65535;
		class ItemInfo
		{
			Text="RESERVE" \n "conditions";
			lStyle=-842150451;
			Shape=2;
			FontFace="Arial";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=8;
				Priority=1;
				Condition="!(isnil ""_reserve"");";
			};
		};
	};
	class Item9
	{
		Flags=218;
		BasicText="";
		Left=5.4052072;
		Top=267.63669;
		Right=95.40506;
		Bottom=317.63687;
		BgColor=65535;
		class ItemInfo
		{
			Text="CUSTOM" \n "conditions";
			lStyle=-842150451;
			Shape=2;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=9;
				Condition="!(isnil ""_custom"");";
			};
		};
	};
	class Item10
	{
		Flags=250;
		BasicText="";
		Left=-405.94885;
		Top=673.40753;
		Right=93.318497;
		Bottom=717.61072;
		BgColor=16777215;
		class ItemInfo
		{
			Text="ISSUE ORDERS";
			lStyle=-842150451;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=2;
			class ItemInfo
			{
				Id=10;
				InitCode="private [""_profiles"",""_data"",""_state"",""_section"",""_pos"",""_objectiveID"",""_turn"",""_objectivesX""];" \n "" \n "_TACOM_status = ""Order"";" \n "_timestamp = time;" \n "" \n "//Get all profileIDs and objectives" \n "_profiles = ([ALIVE_profileHandler, ""getProfiles"", ""entity""] call ALIVE_fnc_profileHandler) select 1;" \n "_objectives = [_OPCOM_HANDLER,""objectives""] call ALiVE_fnc_HashGet;" \n "_section = [_objective,""section"",[]] call AliVE_fnc_HashGet;" \n "_state = [_objective,""opcom_state"",""unassigned""] call ALiVE_fnc_HashGet;" \n "_pos = [_objective,""center""] call AliVE_fnc_HashGet;" \n "_objectiveID = [_objective,""objectiveID""] call AliVE_fnc_HashGet;" \n "" \n "//set orders by type" \n "switch (_operation) do {" \n "" \n "        case ( ""recon"") : {" \n "            _turn = true;" \n "" \n "            if (count _section >= _sectionsamount_attack) then {" \n "                [_objective,""tacom_state"",""recon""] call AliVE_fnc_HashSet;" \n "" \n "                {" \n "                    _profileID = _x;" \n "" \n "                    if (_profileID in _profiles) then {" \n "                        _profile = [ALIVE_profileHandler, ""getProfile"", _profileID] call ALIVE_fnc_profileHandler;" \n "" \n "                        //Select recon postion in angle to objectve" \n "                        _posP = [_profile, ""position""] call ALIVE_fnc_profileEntity;" \n "                        _direction = (_pos getDir _posP);" \n "                        _newPosition = (_pos getPos [500, _direction]);" \n "                        " \n "                        if (_turn) then {_direction = _direction - 90;_turn = false} else {_direction = _direction + 90;_turn = true};" \n "" \n "                        _newPosition = (_newPosition getPos [150, _direction]);" \n "" \n "                        if (surfaceIsWater _newPosition) then {" \n "                            _newPosition = [" \n "                                _newPosition, " \n "                                0, " \n "                                500," \n "                                1, " \n "                                0, " \n "                                100, " \n "                                1, " \n "                                [], " \n "                                [_newPosition]" \n "                            ] call BIS_fnc_findSafePos;" \n "                        };" \n "" \n "                        _posWP = [_newPosition,50] call CBA_fnc_Randpos;" \n "" \n "                        [_OPCOM_HANDLER,""setorders"",[_posWP,_profileID,_objectiveID,_operation]] call ALiVE_fnc_OPCOM;" \n "                    };" \n "                } foreach _section;" \n "" \n "                _recon set [1,_section];" \n "                _TAC_confirmed = true;" \n "            } else {" \n "                if (count _section == 0) then {" \n "                    _recon set [1,[""no groups available""]];" \n "                    _TAC_confirmed = false;" \n "                } else {" \n "                    {" \n "                        _profileID = _x;" \n "" \n "                        if (_profileID in _profiles) then {" \n "                            _profile = [ALIVE_profileHandler, ""getProfile"", _profileID] call ALIVE_fnc_profileHandler;" \n "" \n "                            //Select nearest taken objective to regroup" \n "                            _posP = [_profile, ""position""] call ALIVE_fnc_profileEntity;" \n "                            _objectivesX = [_objectives,[],{_posP distance (_x select 2 select 1)},""ASCEND""] call ALiVE_fnc_SortBy;" \n "                            " \n "                            {" \n "                                _state = [_x,""opcom_state""] call ALivE_fnc_HashGet;" \n "                                " \n "                                if (_state == ""idle"") exitwith {" \n "                                    _objectiveID = [_x,""objectiveID""] call ALiVE_fnc_HashGet;" \n "                                    _posWP = [_x,""center""] call ALiVE_fnc_HashGet;" \n "                                    [_profile, ""clearWaypoints""] call ALIVE_fnc_profileEntity;" \n "                                    _profileWaypoint = [_posWP, 50] call ALIVE_fnc_createProfileWaypoint;" \n "                                    [_profile, ""addWaypoint"", _profileWaypoint] call ALIVE_fnc_profileEntity;" \n "                                };" \n "                            } foreach _objectivesX;" \n "                        };" \n "                    } foreach _section;" \n "" \n "                    _recon set [1,[""not enough groups to build a section, regrouping...""]];" \n "                    _TAC_confirmed = false;" \n "                };" \n "            };" \n "            _data = _recon;" \n "        };" \n "" \n "        case ( ""capture"") : {" \n "" \n "            if (count _section > 0) then {" \n "                [_objective,""tacom_state"",""capture""] call AliVE_fnc_HashSet;" \n "" \n "                {" \n "                    private [""_profile"",""_profileID"",""_statements""];" \n "" \n "                        _profileID = _x;" \n "" \n "                        if (_profileID in _profiles) then {" \n "                            [_OPCOM_HANDLER,""setorders"",[([_pos,50] call CBA_fnc_RandPos),_profileID,_objectiveID,_operation]] call ALiVE_fnc_OPCOM;" \n "                        };" \n "                } foreach _section;" \n "" \n "                _TAC_confirmed = false;" \n "                _capture set [1,[""operation attack not finished""]];" \n "            } else {" \n "                _TAC_confirmed = false;" \n "                _capture set [1,[""no groups available""]];" \n "            };" \n "            _data = _capture;" \n "        };" \n "" \n "        case (""defend"") : {" \n "" \n "            if (count _section > 0) then {" \n "                [_objective,""tacom_state"",""defend""] call AliVE_fnc_HashSet;" \n "" \n "                {" \n "                    private [""_profileID"",""_statements""];" \n "" \n "                        _profileID = _x;" \n "" \n "                        if (_profileID in _profiles) then {" \n "                            [_OPCOM_HANDLER,""setorders"",[([_pos,50] call CBA_fnc_RandPos),_profileID,_objectiveID,_operation]] call ALiVE_fnc_OPCOM;" \n "                        };" \n "                } foreach _section;" \n "" \n "                _TAC_confirmed = true;" \n "                _defend set [1,_section];" \n "            } else {" \n "                _TAC_confirmed = false;" \n "                _defend set [1,[""no groups available""]];" \n "            };" \n "            _data = _defend;" \n "        };" \n "" \n "        case ( ""reserve"") : {" \n "            if (count _section > 0) then {" \n "                [_objective,""tacom_state"",""reserve""] call AliVE_fnc_HashSet;" \n "" \n "                {" \n "                    private [""_profileID"",""_statements""];" \n "" \n "                        _profileID = _x;" \n "" \n "                        if (_profileID in _profiles) then {" \n "                            [_OPCOM_HANDLER,""setorders"",[([_pos,15] call CBA_fnc_RandPos),_profileID,_objectiveID,_operation]] call ALiVE_fnc_OPCOM;" \n "                        };" \n "                } foreach _section;" \n "" \n "                _reserve set [1,_section];" \n "                _TAC_confirmed = true;" \n "            } else {" \n "                _reserve set [1,[""no groups available""]];" \n "                _TAC_confirmed = false;" \n "            };" \n "            _data = _reserve;" \n "        };" \n "        case (""custom"") : {};" \n "        default {};" \n "};";
			};
		};
	};
	class Item11
	{
		Flags=218;
		BasicText="";
		Left=-146.46106;
		Top=733.51685;
		Right=-56.46106;
		Bottom=783.51709;
		BgColor=65535;
		class ItemInfo
		{
			Text="GROUP" \n "NOT" \n "CONFIRM";
			lStyle=-842150451;
			Shape=2;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=11;
				Condition="!(_TAC_confirmed) || {time - _timestamp > 30};";
			};
		};
	};
	class Item12
	{
		Flags=218;
		BasicText="";
		Left=-250.57901;
		Top=734.34595;
		Right=-160.57921;
		Bottom=784.34607;
		BgColor=65535;
		class ItemInfo
		{
			Text="GROUP" \n "CONFIRM";
			lStyle=-842150451;
			Shape=2;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=12;
				Condition="_TAC_confirmed;";
			};
		};
	};
	class Item13
	{
		Flags=210;
		BasicText="";
		Left=-509.83673;
		Top=753.77185;
		Right=-501.83667;
		Bottom=761.77185;
		BgColor=0;
		class ItemInfo
		{
			Text="";
			lStyle=-842150451;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=7;
			class ItemInfo
			{
				Id=13;
			};
		};
	};
	class Item14
	{
		Flags=210;
		BasicText="";
		Left=-513.86951;
		Top=2.740855;
		Right=-505.86938;
		Bottom=10.740835;
		BgColor=0;
		class ItemInfo
		{
			Text="";
			lStyle=-842150451;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=7;
			class ItemInfo
			{
				Id=14;
			};
		};
	};
	class Item15
	{
		Flags=250;
		BasicText="";
		Left=-195.24661;
		Top=-87.998024;
		Right=-105.2466;
		Bottom=-37.99802;
		BgColor=16777215;
		class ItemInfo
		{
			Text="INITIALIZE";
			lStyle=-842150451;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=2;
			class ItemInfo
			{
				Id=15;
				InitCode="// debug ---------------------------------------" \n "if(_debug) then { [""TACOM initialized, %1!"",true] call ALIVE_fnc_dumpR; };" \n "// debug ---------------------------------------" \n "";
			};
		};
	};
	class Item16
	{
		Flags=250;
		BasicText="";
		Left=-440.68539;
		Top=-235.58589;
		Right=-437.60031;
		Bottom=-235.58589;
		class ItemInfo
		{
			Text="";
			lStyle=1;
			FontFace="Arial";
			FontHeight=10;
		};
	};
	class Item17
	{
		Flags=250;
		BasicText="";
		Left=-378.14777;
		Top=732.94739;
		Right=-288.14777;
		Bottom=782.94751;
		BgColor=16777215;
		class ItemInfo
		{
			Text="TRANSMIT" \n "TO" \n "OPCOM";
			lStyle=-842150451;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=2;
			class ItemInfo
			{
				Id=17;
				InitCode="_OPCOM_FSM setFSMVariable [""_OPCOM_DATA"",[""confirmed"",[true,_data]]];";
			};
		};
	};
	class Item18
	{
		Flags=250;
		BasicText="";
		Left=-26.008476;
		Top=729.56274;
		Right=63.991539;
		Bottom=779.56287;
		BgColor=16777215;
		class ItemInfo
		{
			Text="TRANSMIT" \n "TO" \n "OPCOM";
			lStyle=-842150451;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=2;
			class ItemInfo
			{
				Id=18;
				InitCode="_OPCOM_FSM setFSMVariable [""_OPCOM_DATA"",[""confirmed"",[false,_data]]];";
			};
		};
	};
	class Item19
	{
		Flags=218;
		BasicText="";
		Left=-399.33853;
		Top=271.49161;
		Right=-309.33853;
		Bottom=321.49161;
		BgColor=65535;
		class ItemInfo
		{
			Text="RECON" \n "Conditions";
			lStyle=-842150451;
			Shape=2;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=19;
				Condition="!(isnil ""_recon"");";
			};
		};
	};
	class Item20
	{
		Flags=250;
		BasicText="";
		Left=-191.5354;
		Top=70.489761;
		Right=-101.53532;
		Bottom=120.48971;
		BgColor=16777215;
		class ItemInfo
		{
			Text="COLLECT" \n "TO QUEUE";
			lStyle=-842150451;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=2;
			class ItemInfo
			{
				Id=20;
				InitCode="_TACOM_status = ""collect data to queue"";" \n "_timestamp = time;" \n "" \n "_TACOM_QUEUE pushback _TACOM_DATA;" \n "_TACOM_DATA = nil;";
			};
		};
	};
	class Item21
	{
		Flags=218;
		BasicText="";
		Left=-190.10483;
		Top=130.57095;
		Right=-100.10485;
		Bottom=180.57101;
		BgColor=65535;
		class ItemInfo
		{
			Text="ENTRIES" \n "IN QUEUE";
			lStyle=-842150451;
			Shape=2;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=21;
				Condition="(count _TACOM_QUEUE > 0) && !(_busy) && (time - _lastanalyze > 0.5);";
			};
		};
	};
	class Item22
	{
		Flags=218;
		BasicText="";
		Left=-362.50247;
		Top=61.89798;
		Right=-272.50247;
		Bottom=111.89796;
		BgColor=65535;
		class ItemInfo
		{
			Text="Feeder";
			lStyle=-842150451;
			Shape=2;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=22;
				Condition="time - _lastanalyze > 15;";
			};
		};
	};
	class Item23
	{
		Flags=250;
		BasicText="";
		Left=-195.46014;
		Top=356.81583;
		Right=-105.46014;
		Bottom=406.81583;
		BgColor=16777215;
		class ItemInfo
		{
			Text="SELECT" \n "SECTION";
			lStyle=-842150451;
			FontFace="Arial";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=2;
			class ItemInfo
			{
				Id=23;
				InitCode="private [""_objective"",""_section"",""_size"",""_sectionAssist"",""_operation"",""_hdl""];" \n "" \n "_TACOM_status = ""Select section"";" \n "_timestamp = time;" \n "" \n "//prepare data" \n "if !(isnil ""_recon"") then {_operation = ""recon""; _objective = _recon select 0; _size = _recon select 1};" \n "if !(isnil ""_capture"") then {_operation = ""capture""; _objective = _capture select 0; _size = _capture select 1};" \n "if !(isnil ""_defend"") then {_operation = ""defend""; _objective = _defend select 0; _size = _defend select 1};" \n "if !(isnil ""_reserve"") then {_operation = ""reserve""; _objective = _reserve select 0; _size = _reserve select 1};" \n "if !(isnil ""_custom"") then {_operation = ""custom""; _objective = _custom select 0; _size = _custom select 1};" \n "" \n "_section = [_objective, ""section"",[]] call ALiVE_fnc_HashGet;" \n "{" \n "    private [""_profile""];" \n "    _profile = [ALiVE_ProfileHandler,""getProfile"",_x] call ALiVE_fnc_ProfileHandler;" \n "" \n "    if (isnil ""_profile"") then {" \n "        [_OPCOM_HANDLER,""resetorders"",_x] call ALiVE_fnc_OPCOM;" \n "    };" \n "} foreach _section;" \n "" \n "_section = [_objective, ""section"",[]] call ALiVE_fnc_HashGet;" \n "if (count _section < _size) then {" \n "    _hdl = [_OPCOM_HANDLER,[_objective,_size]] spawn {" \n "        private [""_objective"",""_pos""];" \n "" \n "        _objective = _this select 1 select 0;" \n "        _size = _this select 1 select 1;" \n "        _pos = [_objective,""center""] call ALiVE_fnc_HashGet;" \n "" \n "        _sectionAssist = [_this select 0,""NearestAvailableSection"",[_pos,_size,[""infantry"",""motorized"",""mechanized"",""armored""]]] call ALiVE_fnc_OPCOM;" \n "        [_objective, ""sectionAssist"",_sectionAssist] call ALiVE_fnc_HashSet;" \n "    };" \n "} else {" \n "    _hdl = [] spawn {true};" \n "};";
			};
		};
	};
	class Item24
	{
		Flags=218;
		BasicText="";
		Left=-197.46609;
		Top=422.04288;
		Right=-107.46623;
		Bottom=472.04291;
		BgColor=65535;
		class ItemInfo
		{
			Text="SECTION" \n "SELECTED";
			lStyle=-842150451;
			Shape=2;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=24;
				Condition="scriptdone _hdl;";
			};
		};
	};
	class Item25
	{
		Flags=250;
		BasicText="";
		Left=-198.32619;
		Top=497.75208;
		Right=-108.32619;
		Bottom=547.75232;
		BgColor=16777215;
		class ItemInfo
		{
			Text="PREPARE" \n "ORDERS";
			lStyle=-842150451;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=2;
			class ItemInfo
			{
				Id=25;
				InitCode="terminate _hdl;" \n "" \n "private [""_sectionAssist""];" \n "_sectionAssist = [_objective,""sectionAssist"",[]] call AliVE_fnc_HashGet;" \n "" \n "//Add groups" \n "if (count _section < _size) then {" \n "" \n "    for ""_i"" from 0 to ((_size - (count _section)) - 1) do {" \n "        if (_i > ((count _sectionAssist) - 1)) exitwith {};" \n "" \n "        _section pushback (_sectionAssist select _i);" \n "    };" \n "    [_objective,""section"",_section] call AliVE_fnc_HashSet;" \n "};" \n "" \n "//Remove groups" \n "if ((count _section) > _size) then {" \n "    {" \n "        _section = [_objective,""section"",[]] call AliVE_fnc_HashGet;" \n "" \n "        if (count _section == _size) exitwith {};" \n "        [_OPCOM_HANDLER,""resetorders"",_x] call ALiVE_fnc_OPCOM;" \n "    } foreach _section;" \n "};" \n "" \n "_section = [_objective,""section"",[]] call AliVE_fnc_HashGet;";
			};
		};
	};
	class Item26
	{
		Flags=218;
		BasicText="";
		Left=-199.32373;
		Top=579.34399;
		Right=-109.32371;
		Bottom=629.34399;
		BgColor=65535;
		class ItemInfo
		{
			Text="PREPARED";
			lStyle=-842150451;
			Shape=2;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=26;
				Condition="true";
			};
		};
	};
	class Item27
	{
		Flags=218;
		BasicText="";
		Left=-205.8629;
		Top=897.22125;
		Right=-115.86282;
		Bottom=947.22125;
		BgColor=65535;
		class ItemInfo
		{
			Text="EXIT";
			lStyle=-842150451;
			Shape=2;
			FontFace="";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=27;
				Priority=99;
				Condition="_exitFSM";
			};
		};
	};
	class Item28
	{
		Flags=250;
		BasicText="";
		Left=-205.44388;
		Top=1033.163;
		Right=-115.44379;
		Bottom=1083.163;
		BgColor=33023;
		class ItemInfo
		{
			Text="END";
			lStyle=-842150451;
			Shape=6;
			FontFace="";
			FontHeight=10;
			FontWeight=700;
			FontCharSet=0;
			ItemType=1;
			class ItemInfo
			{
				Id=28;
				InitCode="[_OPCOM_HANDLER,""TACOM_FSM""] call ALiVE_fnc_HashRem;";
			};
		};
	};
	class Item29
	{
		Flags=250;
		BasicText="";
		Left=666.19714;
		Top=573.90515;
		Right=756.19714;
		Bottom=623.90515;
		BgColor=16777215;
		class ItemInfo
		{
			Text="Loop" \n "Start";
			lStyle=-842150451;
			Group=-842150451;
			FontFace="Arial";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=2;
			class ItemInfo
			{
				Id=81;
			};
		};
	};
	class Item30
	{
		Flags=218;
		BasicText="";
		Left=474.99139;
		Top=573.27277;
		Right=564.99139;
		Bottom=623.27277;
		BgColor=65535;
		class ItemInfo
		{
			Text="Spawn Sources" \n "Empty";
			lStyle=-842150451;
			Shape=2;
			Group=-842150451;
			FontFace="Arial";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=82;
			};
		};
	};
	class Item31
	{
		Flags=250;
		BasicText="";
		Left=474.99133;
		Top=739.13;
		Right=564.99127;
		Bottom=789.13;
		BgColor=16777215;
		class ItemInfo
		{
			Text="Fill" \n "Spawn" \n "Sources";
			lStyle=-842150451;
			Group=-842150451;
			FontFace="Arial";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=2;
			class ItemInfo
			{
				Id=83;
			};
		};
	};
	class Item32
	{
		Flags=218;
		BasicText="";
		Left=668.36023;
		Top=864.8985;
		Right=758.36023;
		Bottom=914.8985;
		BgColor=65535;
		class ItemInfo
		{
			Text="Loop" \n "Done";
			lStyle=-842150451;
			Shape=2;
			Group=-842150451;
			FontFace="Arial";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=86;
			};
		};
	};
	class Item33
	{
		Flags=250;
		BasicText="";
		Left=668.36005;
		Top=738.25928;
		Right=758.36005;
		Bottom=788.25928;
		BgColor=16777215;
		class ItemInfo
		{
			Text="Process" \n "Queues";
			lStyle=-842150451;
			Group=-842150451;
			FontFace="Arial";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=2;
			class ItemInfo
			{
				Id=89;
			};
		};
	};
	class Item34
	{
		Flags=218;
		BasicText="";
		Left=668.35999;
		Top=651.79333;
		Right=758.35999;
		Bottom=701.79333;
		BgColor=65535;
		class ItemInfo
		{
			Text="Finished";
			lStyle=-842150451;
			Shape=2;
			Group=-842150451;
			FontFace="Arial";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=90;
			};
		};
	};
	class Item35
	{
		Flags=218;
		BasicText="";
		Left=813.78162;
		Top=573.18628;
		Right=903.78162;
		Bottom=623.18628;
		BgColor=65535;
		class ItemInfo
		{
			Text="Spawn" \n "Sources" \n "Left";
			lStyle=-842150451;
			Shape=2;
			Group=-842150451;
			FontFace="Arial";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=4;
			class ItemInfo
			{
				Id=91;
			};
		};
	};
	class Item36
	{
		Flags=250;
		BasicText="";
		Left=812.99554;
		Top=744.5459;
		Right=902.99554;
		Bottom=794.5459;
		BgColor=16777215;
		class ItemInfo
		{
			Text="Check" \n "Spawn" \n "Radius";
			lStyle=-842150451;
			Group=-842150451;
			FontFace="Arial";
			FontHeight=10;
			FontWeight=0;
			FontCharSet=0;
			ItemType=2;
			class ItemInfo
			{
				Id=92;
			};
		};
	};
};
class GraphLinks
{
	class Link0
	{
		From=0;
		To=1;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link1
	{
		From=1;
		To=15;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link2
	{
		From=2;
		To=3;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link3
	{
		From=2;
		To=4;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link4
	{
		From=2;
		To=7;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link5
	{
		From=2;
		To=8;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link6
	{
		From=2;
		To=9;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link7
	{
		From=2;
		To=19;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link8
	{
		From=2;
		To=22;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link9
	{
		From=2;
		To=27;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link10
	{
		From=3;
		To=20;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link11
	{
		From=4;
		To=23;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link12
	{
		From=5;
		To=6;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link13
	{
		From=5;
		To=27;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link14
	{
		From=6;
		To=3;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link15
	{
		From=7;
		To=23;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link16
	{
		From=8;
		To=23;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link17
	{
		From=9;
		To=23;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link18
	{
		From=10;
		To=11;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link19
	{
		From=10;
		To=12;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link20
	{
		From=10;
		To=27;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link21
	{
		From=11;
		To=18;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link22
	{
		From=12;
		To=17;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link23
	{
		From=13;
		To=14;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link24
	{
		From=13;
		To=27;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link25
	{
		From=14;
		To=3;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link26
	{
		From=15;
		To=3;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link27
	{
		From=17;
		To=13;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link28
	{
		From=18;
		To=5;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link29
	{
		From=19;
		To=23;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link30
	{
		From=20;
		To=21;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link31
	{
		From=20;
		To=27;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link32
	{
		From=21;
		To=2;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link33
	{
		From=22;
		To=2;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link34
	{
		From=23;
		To=24;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link35
	{
		From=23;
		To=27;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link36
	{
		From=24;
		To=25;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link37
	{
		From=25;
		To=26;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link38
	{
		From=26;
		To=10;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link39
	{
		From=27;
		To=28;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link40
	{
		From=29;
		To=30;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link41
	{
		From=29;
		To=35;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link42
	{
		From=30;
		To=31;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link43
	{
		From=31;
		To=34;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link44
	{
		From=32;
		To=33;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link45
	{
		From=33;
		To=34;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link46
	{
		From=34;
		To=29;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link47
	{
		From=35;
		To=36;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
	class Link48
	{
		From=36;
		To=32;
		Color=6316128;
		Flags=2;
		class Extra
		{
			ArrowSize=0;
		};
	};
};
class Globals
{
	NextGroupID=1;
	NextID=93;
	FSMName="entitySpawner";
	CompileConfig="scriptedFSM.cfg";
	class DefaultLink
	{
		ArrowSize=0;
	};
	DefaultLinkColor=6316128;
	DefaultLinkColorFromSelected=6316287;
	DefaultLinkColorToSelected=6356832;
	DefaultLinkUseCustom=1;
	PZoomLeft=485.40344;
	PZoomRight=900.43933;
	PZoomBottom=1091.0404;
	PZoomTop=427.61279;
	Clxs=528;
	Clys=844;
	Aspect=1;
};
class Window
{
	Flags=2;
	MaxPosX=-1;
	MaxPosY=-1;
	MinPosX=-1;
	MinPosY=-1;
	Left=192;
	Top=192;
	Right=1359;
	Bottom=1284;
	ShowCmd=3;
	SplitPos=550;
};
